@startuml
' Паттерн Одиночка (Singleton)
class Library {
    - static Library instance
    - List<Book> books
    - List<User> users
    - List<Loan> loans
    - List<Observer> observers
    --
    - Library()
    + static getInstance(): Library
    + addBook(Book book): void
    + addUser(User user): void
    + loanBook(BookCopy bookCopy, User user): void
    + returnBook(BookCopy bookCopy): void
    + addObserver(Observer observer): void
    + removeObserver(Observer observer): void
    + notifyObservers(String message): void
}

class Book {
    - String title
    - String author
    --
    + Book(String title, String author)
    + getTitle(): String
    + getAuthor(): String
    + getData(): String
}

class EBook extends Book {
    - double fileSize
    - String format
    --
    + EBook(String title, String author, double fileSize, String format)
    + getFileSize(): double
    + getFormat(): String
    + getData(): String
}

' Паттерн Декоратор (Decorator)
class EBookDecorator {
    # EBook ebook
    --
    + EBookDecorator(EBook ebook)
    + getData(): String
}

class LastPageDecorator extends EBookDecorator {
    - int lastReadPage
    --
    + LastPageDecorator(EBook ebook)
    + setLastReadPage(int page): void
    + getLastReadPage(): int
    + getData(): String
}

class Magazine extends Book {
    - String issue
    - String publicationDate
    --
    + Magazine(String title, String author, String issue, String publicationDate)
    + getIssue(): String
    + getPublicationDate(): String
    + getData(): String
}

class PrintedBook extends Book {
    - String shelfLocation
    --
    + PrintedBook(String title, String author, String shelfLocation)
    + getShelfLocation(): String
    + getData(): String
}

Library "1" *-- "0..*" Book : "manages"
Book <|-- EBook
EBookDecorator *-- EBook
LastPageDecorator <|-- EBookDecorator
Book <|-- Magazine
Book <|-- PrintedBook
@enduml
